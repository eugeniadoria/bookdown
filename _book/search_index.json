[["index.html", "Introdução ao R Chapter 1 Introdução 1.1 Para que usar o R? 1.2 Instalação", " Introdução ao R Eugênia Cerqueira Chapter 1 Introdução Bem-vindos ao Curso de Introdução ao R do MQ da FAFICH-UFMG! O curso possui como objetivo apresentar os elementos básicos dos softwares R e RStudio. Durante as aulas, vocês serão introduzidos à linguagem R, aprenderão a realizar operações básicas, criar objetos, importar e exportar dados, manipular dados e criar visualizações impactantes. O curso será ministrado em 5 aulas de 3 horas cada, onde apresentaremos conceitos fundamentais, exemplos práticos e exercícios de fixação para garantir o aprendizado efetivo. Nosso foco será no aprendizado dos princípios básicos do R, com ênfase na realização de análises estatísticas descritivas e exploratórias. Ao longo do curso, vocês aprenderão a: Manipular variáveis e bancos de dados (criar, recodificar, transformar e fundir); Aplicar medidas-resumo; Elaborar a apresentação dos resultados através de tabelas, gráficos e modelos. 1.1 Para que usar o R? O R é um programa gratuito e de código aberto Ao contrário de muitos softwares de análise de dados, o R é gratuito. Além disso, o R é open source. Ou seja, o código de programação dele fica aberto ao público e todos os interessados podem propor modificações. O RStudio é um ambiente integrado de código aberto para escrever scripts no R e utilizar outros recursos baseados no R. O R te abre portas Há linguagens de programação de vários níveis, que conversam com o computador em diferentes camadas de complexidade. A familiaridade com a linguagem R permite a compreensão mais rápida de outras como Python, MatLab etc. Vale lembrar: O R se 1.2 Instalação O RStudio é um ambiente integrado de código aberto para escrever scripts no R e utilizar outros recursos baseados no R. Há diversas versões do RStudio. Baixe a versão gratuita e, em seguida, o instalador para o seu sistema operacional. "],["aula-1.html", "Chapter 2 Aula 1 2.1 Interface 2.2 Instalando pacotes 2.3 Carregando pacotes 2.4 Carregar arquivos 2.5 Tipos de arquivos no R 2.6 Tipos de variáveis 2.7 Exportar arquivos", " Chapter 2 Aula 1 Na primeira aula veremos como carregar e exportar dados no R, os principais tipos de dados. 2.1 Interface O RStudio é um editor de texto especial que foi personalizado para facilitar o trabalho com R. Ele pode ser instalado no seu próprio computador ou você pode fazer login em um servidor RStudio compartilhado (por exemplo, um administrado pela sua universidade) a partir de um navegador web. De qualquer forma, a interface é basicamente a mesma e contém 4 painéis principais: 1-Fonte: Onde se escreve o código. No editor de código, você poderá escrever e editar os scripts. Script nada mais é do que uma sequência de comandos/ordens que serão executados em sequência pelo R 2-Console: Onde o código da fonte é avaliado pelo R. Pode-se também utilizar o console para realizar códigos rápidos, sem salvá-los. 3-Ambiente: Exibe os objetos e dados de trabalho. 4- Abas plots, packages A aba Plots trará os gráficos gerados, possibilitando a exportação para alguns formatos diferentes, como .png e .pdf. Na aba Files, você terá uma navegação de arquivos do seu comdrputa Em Packages estão listados os pacotes instalados. Você pode verificar quais estão carregados e, caso necessário, poderá carregar algum pacote necessário para a sua análise. Também é possível instalar e atualizar pacotes. 2.2 Instalando pacotes Pacotes no R são coleções de funções, dados e documentação desenvolvidas para ampliar as funcionalidades básicas do R. Pense nos pacotes como “plugins” ou “extensões” que você pode adicionar ao R para realizar tarefas específicas que não estão incluídas na instalação padrão do software. Um pacote pode incluir: Funções: Conjuntos de comandos que automatizam tarefas específicas. Dados: Conjuntos de dados que podem ser usados para prática e exemplos. Documentação: Instruções e exemplos que explicam como usar as funções do pacote Pacotes podem ser através do comando install.packages (“nomedopacote”) instal.packages(&quot;readxl&quot;) Lembrete: o nome do pacote sempre deve estar entre aspas. Pacotes também podem ser instalados na aba “Packages” e em “Install”. Uma nova janela abrirá, na qual podemos procurar o pacote desejado e instalá-lo. Para a aula de hoje vamos instalar os seguintes pacotes: instal.packages(&quot;readxl&quot;) instal.packages(&quot;readr&quot;) 2.3 Carregando pacotes Para utilizar os pacotes instalados é necessário carregá-los antes através da função library(nomedopacote). Atenção: o nome do pacote não deve vir entre aspas, como na função de instalar. Caso tente executar uma função de um pacote que não esteja carregado, o R responderá com uma mensagem de erro. library(readxl) 2.4 Carregar arquivos 2.4.1 Arquivos CSV CSV significa comma separated values (valores separados por vírgulas) e consiste em um formato muito comum para dados que podem ser utilizados entre diferentes programas de software. Um arquivo CSV é um arquivo de texto simples que contém uma lista de dados, com cada valor separado por vírgula. O R é capaz de ler um arquivo CSV sem carregar nenhum pacote. Podemos usar o comando read.csv() para carregar um arquivo. dados&lt;-read.csv(&quot;/Users/eugeniaviana/Documents/Documents/Eugenia/Sociologia/MQ/aula1.csv&quot;) O diretório do arquivo deve vir entre aspas. A função sep= permite escolher o separador do arquivo csv. dados&lt;-read.csv(&quot;/Users/eugeniaviana/Documents/Documents/Eugenia/Sociologia/MQ/aula1.csv&quot;, sep=&quot;,&quot;) 2.4.2 Arquivos Excel O R também pode ler arquivos Excel, embora não seja uma função integrada à versão base do software. Para isso, é necessário instalar e carregar o pacote readxl. *Atenção,caso o arquivo Excel tenha mais de uma aba, é necessário especificar qual aba deverá ser lida. library(readxl) 2.4.3 Arquivos DTA, SPSS, Dat Para ler os arquivos SPSS é necessário instalar e carregar o pacote foreign. Já os arquivos DTA são carregados através do pacote haven. library(foreign) library(haven) 2.5 Tipos de arquivos no R 2.5.1 Dataframe DataFrame é uma estrutura de dados que organiza os dados em uma tabela bidimensional de linhas e colunas, como uma planilha. Os DataFrames são uma das estruturas de dados mais comuns na análise de dados moderna, pois são uma maneira flexível e intuitiva de armazenar e trabalhar com dados. Uma vez o arquivo carregado, ele deve aparecer no painel “Environment”, no canto superior direito. O ícone de tabela no canto direito indica que se trata de um dataframe. Para visualizá-lo, basta clicar no ícone. O dataframe indica as variáveis, o número de de linhas e colunas. 2.6 Tipos de variáveis Existem diversos tipos de objetos, e cada tipo “armazena” um conteúdo diferente, desde tabelas de dados recém-carregados a textos, números, ou simplesmente a afirmação de verdadeiro ou falso (Boleano). Repare nas atribuições acima. Usaremos a função class() para ver o tipo de cada uma: 2.7 Exportar arquivos 2.7.1 Objetos RDS Objetos rds são arquivos próprios do R e servem para salvar em arquivo local qualquer tipo de estrutura de dados, mantendo sempre todas as propriedades do objeto original. Arquivos rds podem ser salvos com a função write_rds(), do pacote readr. "],["aula-2.html", "Chapter 3 Aula 2 3.1 Resumo de variáveis 3.2 Trabalhando com NAs 3.3 Tabelas", " Chapter 3 Aula 2 3.1 Resumo de variáveis O comando summary(dataframe) permite resumir os dados, apontando média, mediana, máximo, mínimo e quartis. summary(dados) ## X status tempo_empresa moradia ## Min. : 1 Length:4454 Min. : 0.000 Length:4454 ## 1st Qu.:1114 Class :character 1st Qu.: 2.000 Class :character ## Median :2228 Mode :character Median : 5.000 Mode :character ## Mean :2228 Mean : 7.987 ## 3rd Qu.:3341 3rd Qu.:12.000 ## Max. :4454 Max. :48.000 ## ## tempo_emprestimo idade estado_civil registros ## Min. : 6.00 Min. :18.00 Length:4454 Length:4454 ## 1st Qu.:36.00 1st Qu.:28.00 Class :character Class :character ## Median :48.00 Median :36.00 Mode :character Mode :character ## Mean :46.44 Mean :37.08 ## 3rd Qu.:60.00 3rd Qu.:45.00 ## Max. :72.00 Max. :68.00 ## ## trabalho despesas renda ativos ## Length:4454 Min. : 35.00 Min. : 6.0 Min. : 0 ## Class :character 1st Qu.: 35.00 1st Qu.: 90.0 1st Qu.: 0 ## Mode :character Median : 51.00 Median :125.0 Median : 3000 ## Mean : 55.57 Mean :141.7 Mean : 5404 ## 3rd Qu.: 72.00 3rd Qu.:170.0 3rd Qu.: 6000 ## Max. :180.00 Max. :959.0 Max. :300000 ## NA&#39;s :381 NA&#39;s :47 ## dividas valor_emprestimo preco_do_bem ## Min. : 0 Min. : 100 Min. : 105 ## 1st Qu.: 0 1st Qu.: 700 1st Qu.: 1117 ## Median : 0 Median :1000 Median : 1400 ## Mean : 343 Mean :1039 Mean : 1463 ## 3rd Qu.: 0 3rd Qu.:1300 3rd Qu.: 1692 ## Max. :30000 Max. :5000 Max. :11140 ## NA&#39;s :18 Para encontrar o desvio padrão é necessário usar o comando sd (). Porém, atenção! Nesse comando é necessário especificar a coluna para a qual queremos aferir o desvio padrão. O mesmo pode ser aplicado às formulas mean(), max(), min(), quantile() 3.1.1 Variáveis quantitativas sd(dados$idade) ## [1] 10.9846 mean(dados$idade) ## [1] 37.08038 max(dados$idade) ## [1] 68 min(dados$idade) ## [1] 18 quantile(dados$idade) ## 0% 25% 50% 75% 100% ## 18 28 36 45 68 3.1.2 Variáveis qualitativas Para verificar as categorias em variáveis qualitativas utilizamos a função unique: unique(dados$moradia) ## [1] &quot;alugada&quot; &quot;própria&quot; &quot;pais&quot; &quot;priv&quot; &quot;outras&quot; NA 3.2 Trabalhando com NAs A função is.na() realiza um teste para saber se a variável/coluna possui um valor NA. retorna TRUE se for NA e FALSE se não for. is.na(dados$moradiareached getOption(&quot;max.print&quot;) -- omitted 3454 entries ] Algumas funções possuem o argumento na.rm, ou semelhantes, para desconsiderar NA no cálculo. É o caso da função mean() ou sum(). mean(dados$renda, na.rm=T) ## [1] 141.6877 3.3 Tabelas 3.3.1 Função table Para criar tabelas o R possui a função table, incorporado ao seu próprio sistema. Por exemplo, vamos começar criando uma tabela que mostre a divisão da variável Moradia, por categoria. table(dados$moradia) ## ## alugada outras pais priv própria ## 973 319 783 246 2107 Podemos também criar uma tabela de contingência, cruzando duas variáveis qualitativas table(dados$moradia, dados$status) ## ## bom ruim ## alugada 585 388 ## outras 173 146 ## pais 550 233 ## priv 162 84 ## própria 1717 390 3.3.2 Pacote pollster O pacote pollster permite a realização de tabelas ponderadas. É muito útil para se trabalhar com dados de pesquisas como censo etc. Como exemplo, usaremos dados da pesquisa de origem e destino de Belo Horizonte (Fundação João Pinheiro, 2012). Os resultados da tabela mostram a frequência de observações ponderadas pelo fator, o percentual de cada categoria e o percentual acumulado. library(readxl) idosos&lt;-read_excel(&quot;/Users/eugeniaviana/Documents/Documents/Eugenia/Sociologia/MQ/Idosos.xlsx&quot;) A função topline permite criar uma tabela ponderada a partir de uma variável. No comando weight = indicamos a variável correspondente ao fator de ponderação. library(pollster) topline(df = idosos, variable = UDM, weight = Fator) ## # A tibble: 5 × 5 ## Response Frequency Percent `Valid Percent` `Cumulative Percent` ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 - Sozinhos 284887. 25.2 25.2 25.2 ## 2 2 - Casal 306168. 27.1 27.1 52.4 ## 3 3 - Casal com filhos 332010. 29.4 29.4 81.8 ## 4 4 - Monoparental 203492. 18.0 18.0 99.8 ## 5 5 - Outros 2469. 0.219 0.219 100 Já função crosstab permite criar uma tabela de contingência ponderada, a partir de duas variáveis. crosstab(df = idosos, x = UDM, y = Sexo, weight = Fator) ## # A tibble: 5 × 4 ## UDM Feminino Masculino n ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 - Sozinhos 72.2 27.8 284887. ## 2 2 - Casal 46.1 53.9 306168. ## 3 3 - Casal com filhos 39.3 60.7 332010. ## 4 4 - Monoparental 80.5 19.5 203492. ## 5 5 - Outros 84.8 15.2 2469. 3.3.3 Pacote dplyr library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union 3.3.4 Pacote GT O pacote gt é um pacote relativamente novo que permite a apresentação de tabelas de maneira limpa e organizada library(gt) library(gtsummary) ## #BlackLivesMatter Tabela de resumo dados %&gt;% select(moradia,status,idade) %&gt;% tbl_summary() #nvpdkptttd table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #nvpdkptttd thead, #nvpdkptttd tbody, #nvpdkptttd tfoot, #nvpdkptttd tr, #nvpdkptttd td, #nvpdkptttd th { border-style: none; } #nvpdkptttd p { margin: 0; padding: 0; } #nvpdkptttd .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #nvpdkptttd .gt_caption { padding-top: 4px; padding-bottom: 4px; } #nvpdkptttd .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #nvpdkptttd .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #nvpdkptttd .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nvpdkptttd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nvpdkptttd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nvpdkptttd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #nvpdkptttd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #nvpdkptttd .gt_column_spanner_outer:first-child { padding-left: 0; } #nvpdkptttd .gt_column_spanner_outer:last-child { padding-right: 0; } #nvpdkptttd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #nvpdkptttd .gt_spanner_row { border-bottom-style: hidden; } #nvpdkptttd .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #nvpdkptttd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #nvpdkptttd .gt_from_md > :first-child { margin-top: 0; } #nvpdkptttd .gt_from_md > :last-child { margin-bottom: 0; } #nvpdkptttd .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #nvpdkptttd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #nvpdkptttd .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #nvpdkptttd .gt_row_group_first td { border-top-width: 2px; } #nvpdkptttd .gt_row_group_first th { border-top-width: 2px; } #nvpdkptttd .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nvpdkptttd .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #nvpdkptttd .gt_first_summary_row.thick { border-top-width: 2px; } #nvpdkptttd .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nvpdkptttd .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nvpdkptttd .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #nvpdkptttd .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #nvpdkptttd .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #nvpdkptttd .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nvpdkptttd .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nvpdkptttd .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nvpdkptttd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nvpdkptttd .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nvpdkptttd .gt_left { text-align: left; } #nvpdkptttd .gt_center { text-align: center; } #nvpdkptttd .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #nvpdkptttd .gt_font_normal { font-weight: normal; } #nvpdkptttd .gt_font_bold { font-weight: bold; } #nvpdkptttd .gt_font_italic { font-style: italic; } #nvpdkptttd .gt_super { font-size: 65%; } #nvpdkptttd .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #nvpdkptttd .gt_asterisk { font-size: 100%; vertical-align: 0; } #nvpdkptttd .gt_indent_1 { text-indent: 5px; } #nvpdkptttd .gt_indent_2 { text-indent: 10px; } #nvpdkptttd .gt_indent_3 { text-indent: 15px; } #nvpdkptttd .gt_indent_4 { text-indent: 20px; } #nvpdkptttd .gt_indent_5 { text-indent: 25px; } Characteristic N = 4,4541 moradia     alugada 973 (22%)     outras 319 (7.2%)     pais 783 (18%)     priv 246 (5.6%)     própria 2,107 (48%)     Unknown 26 status     bom 3,200 (72%)     ruim 1,254 (28%) idade 36 (28, 45) 1 n (%); Median (IQR) dados %&gt;% select(moradia,renda) %&gt;% tbl_summary(by=moradia, statistic=all_continuous() ~ c(&quot;{mean}&quot;)) ## 26 observations missing `moradia` have been removed. To include these observations, use `forcats::fct_na_value_to_level()` on `moradia` column before passing to `tbl_summary()`. #goxfhtueth table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #goxfhtueth thead, #goxfhtueth tbody, #goxfhtueth tfoot, #goxfhtueth tr, #goxfhtueth td, #goxfhtueth th { border-style: none; } #goxfhtueth p { margin: 0; padding: 0; } #goxfhtueth .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #goxfhtueth .gt_caption { padding-top: 4px; padding-bottom: 4px; } #goxfhtueth .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #goxfhtueth .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #goxfhtueth .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #goxfhtueth .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #goxfhtueth .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #goxfhtueth .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #goxfhtueth .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #goxfhtueth .gt_column_spanner_outer:first-child { padding-left: 0; } #goxfhtueth .gt_column_spanner_outer:last-child { padding-right: 0; } #goxfhtueth .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #goxfhtueth .gt_spanner_row { border-bottom-style: hidden; } #goxfhtueth .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #goxfhtueth .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #goxfhtueth .gt_from_md > :first-child { margin-top: 0; } #goxfhtueth .gt_from_md > :last-child { margin-bottom: 0; } #goxfhtueth .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #goxfhtueth .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #goxfhtueth .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #goxfhtueth .gt_row_group_first td { border-top-width: 2px; } #goxfhtueth .gt_row_group_first th { border-top-width: 2px; } #goxfhtueth .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #goxfhtueth .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #goxfhtueth .gt_first_summary_row.thick { border-top-width: 2px; } #goxfhtueth .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #goxfhtueth .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #goxfhtueth .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #goxfhtueth .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #goxfhtueth .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #goxfhtueth .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #goxfhtueth .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #goxfhtueth .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #goxfhtueth .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #goxfhtueth .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #goxfhtueth .gt_left { text-align: left; } #goxfhtueth .gt_center { text-align: center; } #goxfhtueth .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #goxfhtueth .gt_font_normal { font-weight: normal; } #goxfhtueth .gt_font_bold { font-weight: bold; } #goxfhtueth .gt_font_italic { font-style: italic; } #goxfhtueth .gt_super { font-size: 65%; } #goxfhtueth .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #goxfhtueth .gt_asterisk { font-size: 100%; vertical-align: 0; } #goxfhtueth .gt_indent_1 { text-indent: 5px; } #goxfhtueth .gt_indent_2 { text-indent: 10px; } #goxfhtueth .gt_indent_3 { text-indent: 15px; } #goxfhtueth .gt_indent_4 { text-indent: 20px; } #goxfhtueth .gt_indent_5 { text-indent: 25px; } Characteristic alugada, N = 9731 outras, N = 3191 pais, N = 7831 priv, N = 2461 própria, N = 2,1071 renda 141 129 120 137 153     Unknown 86 55 59 16 161 1 Mean "],["aula-3.html", "Chapter 4 Aula 3 4.1 Criando variáveis 4.2 Filtrar 4.3 Remover dados 4.4 Renomear variáveis", " Chapter 4 Aula 3 No dia a dia de quem trabalha com dados, infelizmente, é muito comum se deparar com dados formatados de um jeito bastante complicado de se manipular. Isso acontece pois a forma de se trabalhar com dados é muito diferente da forma de se apresentar ou visualizar dados. Resumindo: ler dados requer uma estrutura bem diferente de manipular dados. Limpeza de dados também é considerada parte da manipulação de dados. 4.1 Criando variáveis Esta seção se concentra na criação de novas variáveis para sua análise como parte de uma estratégia geral de limpeza de seus dados. Muitas vezes, os dados chegarão a nós codificados de uma certa maneira, mas podemos desejar transformá-los para torná-los mais fáceis de se trabalhar. Nossas análises frequentemente se concentram em mudanças lineares em uma variável dada, mas os dados geralmente não são codificados de forma a representar esses tipos de diferenças. 4.1.1 Criando uma variável 4.1.2 Usando o comando ifelse O comando ifelse é lido como uma frase. Digamos que queremos criar uma nova variável que nos indique se determinado indivíduo na nossa base de dados é um trabalhador autônomo ou não. dados$autonomo&lt;-ifelse(dados$trabalho==&quot;autônomo&quot;,&quot;sim&quot;,&quot;não&quot;) head(dados$autonomo) ## [1] &quot;sim&quot; &quot;não&quot; &quot;sim&quot; &quot;não&quot; &quot;não&quot; &quot;não&quot; Maior e menor que Vamos utilizar a variável idade para mostrar a utilidade dos operadores matemáticos “maior que” e “menor que”. Digamos que queremos criar uma nova variável qualitativa que mostre quem são os idosos na nossa base de dados. Pedimos ao R para selecionar todas observações igual ou maiores que 60 da variável idosos. Se essa condição for preenchida, queremos que na nova variável tenhamos uma categoria “Idosos”. dados$idadeQ&lt;-ifelse(dados$idade&gt;=60,&quot;Idosos&quot;,&quot;Não Idosos&quot;) Após realizar o comando podemos abrir o dataframe para verificar se a nova coluna foi corretamente criada. head(dados$idadeQ) ## [1] &quot;Não Idosos&quot; &quot;Não Idosos&quot; &quot;Não Idosos&quot; &quot;Não Idosos&quot; &quot;Não Idosos&quot; &quot;Não Idosos&quot; my_tbl &lt;- tibble::tribble( ~Col_1, ~Col_2, NA, NA, NA, NA, NA, NA, NA, NA, ) require(knitr) ## Loading required package: knitr kable(my_tbl, digits = 3, row.names = FALSE, align = &quot;c&quot;, caption = NULL) Col_1 Col_2 NA NA NA NA NA NA NA NA Vamos complexificar um pouco mais. Digamos que agora nós queremos 3 categorias. Todos indivíduos com menos 40 anos serão classificados como jovem adultos. De 40 a 59 anos, como adultos e mais de 60 anos, como idosos. O operador &amp; é utilizado para indicar que temos que obedecer mais de uma condição ao mesmo tempo. dados$idadeQ&lt;-ifelse(dados$idade&lt;40,&quot;Jovem adultos&quot;,ifelse(dados$idade&gt;=40 &amp; dados$idade&lt;60, &quot;Adultos&quot;,&quot;Idosos&quot;)) 4.2 Filtrar A filtragem de variáveis pode ser feita através do comando subset. Repare que o novo dataframe dadosf contém 4314 observações, pois abarca apenas os indivíduos mais jovens que 60 anos. dadosf&lt;-subset(dados, idade &lt; 60) summary(dadosf) ## X status tempo_empresa moradia ## Min. : 1 Length:4314 Min. : 0.000 Length:4314 ## 1st Qu.:1115 Class :character 1st Qu.: 2.000 Class :character ## Median :2230 Mode :character Median : 5.000 Mode :character ## Mean :2229 Mean : 7.743 ## 3rd Qu.:3336 3rd Qu.:12.000 ## Max. :4454 Max. :43.000 ## ## tempo_emprestimo idade estado_civil registros ## Min. : 6.00 Min. :18.00 Length:4314 Length:4314 ## 1st Qu.:36.00 1st Qu.:28.00 Class :character Class :character ## Median :48.00 Median :35.00 Mode :character Mode :character ## Mean :46.57 Mean :36.26 ## 3rd Qu.:60.00 3rd Qu.:44.00 ## Max. :72.00 Max. :59.00 ## ## trabalho despesas renda ativos ## Length:4314 Min. : 35.00 Min. : 8.0 Min. : 0 ## Class :character 1st Qu.: 35.00 1st Qu.: 90.0 1st Qu.: 0 ## Mode :character Median : 51.00 Median :125.0 Median : 3000 ## Mean : 55.72 Mean :141.5 Mean : 5207 ## 3rd Qu.: 74.00 3rd Qu.:170.0 3rd Qu.: 6000 ## Max. :180.00 Max. :959.0 Max. :300000 ## NA&#39;s :374 NA&#39;s :46 ## dividas valor_emprestimo preco_do_bem autonomo ## Min. : 0.0 Min. : 100 Min. : 105 Length:4314 ## 1st Qu.: 0.0 1st Qu.: 700 1st Qu.: 1125 Class :character ## Median : 0.0 Median :1000 Median : 1410 Mode :character ## Mean : 346.9 Mean :1043 Mean : 1468 ## 3rd Qu.: 0.0 3rd Qu.:1300 3rd Qu.: 1698 ## Max. :30000.0 Max. :5000 Max. :11140 ## NA&#39;s :17 ## idadeQ ## Length:4314 ## Class :character ## Mode :character ## ## ## ## O comando subset permite selecionar apenas as colunas desejadas dadosf&lt;-subset(dados, select=c(&quot;moradia&quot;,&quot;status&quot;,&quot;idade&quot;)) head(dadosf) ## moradia status idade ## 1 alugada bom 30 ## 2 alugada bom 58 ## 3 própria ruim 46 ## 4 alugada bom 24 ## 5 alugada bom 26 ## 6 própria bom 36 Digamos que queremos montar uma tabela apenas com indivíduos cuja moradia é própria ou alugada. dadosmoradia&lt;-subset(dados, moradia == &quot;alugada&quot;) summary(dadosmoradia) ## X status tempo_empresa moradia ## Min. : 1 Length:973 Min. : 0.000 Length:973 ## 1st Qu.:1070 Class :character 1st Qu.: 1.000 Class :character ## Median :2100 Mode :character Median : 4.000 Mode :character ## Mean :2166 Mean : 6.881 ## 3rd Qu.:3293 3rd Qu.:10.000 ## Max. :4453 Max. :40.000 ## ## tempo_emprestimo idade estado_civil registros ## Min. : 6.00 Min. :18.00 Length:973 Length:973 ## 1st Qu.:36.00 1st Qu.:29.00 Class :character Class :character ## Median :48.00 Median :36.00 Mode :character Mode :character ## Mean :47.55 Mean :36.71 ## 3rd Qu.:60.00 3rd Qu.:43.00 ## Max. :60.00 Max. :68.00 ## ## trabalho despesas renda ativos ## Length:973 Min. : 35.00 Min. : 22.0 Min. : 0 ## Class :character 1st Qu.: 49.00 1st Qu.: 93.0 1st Qu.: 0 ## Mode :character Median : 60.00 Median :125.0 Median : 0 ## Mean : 65.45 Mean :140.7 Mean : 1477 ## 3rd Qu.: 78.00 3rd Qu.:170.0 3rd Qu.: 0 ## Max. :173.00 Max. :535.0 Max. :100000 ## NA&#39;s :86 NA&#39;s :4 ## dividas valor_emprestimo preco_do_bem autonomo ## Min. : 0.00 Min. : 100 Min. : 125 Length:973 ## 1st Qu.: 0.00 1st Qu.: 700 1st Qu.: 1044 Class :character ## Median : 0.00 Median :1000 Median : 1350 Mode :character ## Mean : 97.94 Mean :1027 Mean : 1386 ## 3rd Qu.: 0.00 3rd Qu.:1300 3rd Qu.: 1636 ## Max. :21400.00 Max. :3800 Max. :11140 ## NA&#39;s :2 ## idadeQ ## Length:973 ## Class :character ## Mode :character ## ## ## ## 4.3 Remover dados Using the select() verb, we can answer interesting questions about our dataset by focusing in on related groups of verbs. The colon (:) is useful for getting many columns at a time. 4.3.1 Remover dados na 4.4 Renomear variáveis Às vezes será necessário renomear as variáveis no nosso dataframe. Carregamos o pacote dplyr library(dplyr) dados &lt;- dados %&gt;% rename(teste = estado_civil) head(dados) ## X status tempo_empresa moradia tempo_emprestimo idade teste registros ## 1 1 bom 9 alugada 60 30 casada(o) não ## 2 2 bom 17 alugada 60 58 viúva(o) não ## 3 3 ruim 10 própria 36 46 casada(o) sim ## 4 4 bom 0 alugada 60 24 solteira(o) não ## 5 5 bom 0 alugada 36 26 solteira(o) não ## 6 6 bom 1 própria 60 36 casada(o) não ## trabalho despesas renda ativos dividas valor_emprestimo preco_do_bem autonomo ## 1 autônomo 73 129 0 0 800 846 sim ## 2 fixo 48 131 0 0 1000 1658 não ## 3 autônomo 90 200 3000 0 2000 2985 sim ## 4 fixo 63 182 2500 0 900 1325 não ## 5 fixo 46 107 0 0 310 910 não ## 6 fixo 75 214 3500 0 650 1645 não ## idadeQ ## 1 Jovem adultos ## 2 Adultos ## 3 Adultos ## 4 Jovem adultos ## 5 Jovem adultos ## 6 Jovem adultos "],["aula-4.html", "Chapter 5 Aula 4 5.1 Junção de dados 5.2 Remover dados duplicados", " Chapter 5 Aula 4 5.1 Junção de dados Existem duas grandes formas de junção de dados: UNIÃO e CRUZAMENTO. Para que uma união seja possível, os dois conjuntos de dados precisam ter os mesmos campos. Para que um cruzamento seja possível, os dois conjuntos precisam ter pelo menos um campo em comum. 5.1.1 União de dados 5.1.1.1 Juntar linhas A união de dados é mais intuitiva. Basta ter a mesma quantidade de campos e que estes estejam “alinhados.” A função mais usada para isso é o famoso bind_rows() (Row Bind). Caso os campos tenham exatamente os mesmos nomes e tipo, o bind_rows() consegue fazer a união perfeitamente. Vamos testar com dois dataframes referentes a dados Airbnb em Minas Gerais. Queremos juntar a tabela referente aos dados de Belo Horizonte com a tabela de dados sobre Ouro Preto. Para isso vamos, primeiramente ler os arquivos: library(dplyr) BHair&lt;-read.csv(&quot;/Users/eugeniaviana/Documents/Documents/Eugenia/Sociologia/MQ/Aula 4/BHairbnb.csv&quot;) OPair&lt;-read.csv(&quot;/Users/eugeniaviana/Documents/Documents/Eugenia/Sociologia/MQ/Aula 4/OPairbnb.csv&quot;) airbnb&lt;-bind_rows(BHair,OPair) summary(airbnb) ## X url address location.lat ## Min. : 1.00 Length:200 Length:200 Min. :-20.55 ## 1st Qu.: 25.75 Class :character Class :character 1st Qu.:-20.39 ## Median : 50.50 Mode :character Mode :character Median :-20.19 ## Mean : 50.50 Mean :-20.16 ## 3rd Qu.: 75.25 3rd Qu.:-19.90 ## Max. :100.00 Max. :-19.68 ## location.lng ## Min. :-44.19 ## 1st Qu.:-43.99 ## Median :-43.78 ## Mean :-43.76 ## 3rd Qu.:-43.52 ## Max. :-43.33 5.1.1.2 Juntar colunas Para ilustrar operações de junção, consideraremos primeiro o tipo mais comum, uma “junção à esquerda”(left_join). No esquema abaixo, os dois data frames compartilham uma coluna comum, V1. Podemos combinar os dois data frames em um único data frame, correspondendo as linhas do primeiro data frame com as do segundo data frame que compartilham o mesmo valor da variável V1. Vamos unir os dados de Airbnb sobre BH com uma nova coluna, informando o tipo de locação. Primeiro, vamos carregar o segundo arquivo. BHair2&lt;-read.csv(&quot;/Users/eugeniaviana/Documents/Documents/Eugenia/Sociologia/MQ/Aula 4/BHair.csv&quot;) head(BHair2) ## X url roomType ## 1 1 https://www.airbnb.com/rooms/15677909 Entire rental unit ## 2 2 https://www.airbnb.com/rooms/1011116016079460730 Private room in home ## 3 3 https://www.airbnb.com/rooms/1048772607162009300 Entire home ## 4 4 https://www.airbnb.com/rooms/6687784 Entire rental unit ## 5 5 https://www.airbnb.com/rooms/1150086536583269687 Entire home ## 6 6 https://www.airbnb.com/rooms/1085731432923449528 Entire home Agora vamos unir os dois arquivos left_join(BHair,BHair2, by=&quot;url&quot;) ## X.x url ## 1 1 https://www.airbnb.com/rooms/15677909 ## 2 2 https://www.airbnb.com/rooms/1011116016079460730 ## 3 3 https://www.airbnb.com/rooms/1048772607162009300 ## 4 4 https://www.airbnb.com/rooms/6687784 ## 5 5 https://www.airbnb.com/rooms/1150086536583269687 ## 6 6 https://www.airbnb.com/rooms/1085731432923449528 ## 7 7 https://www.airbnb.com/rooms/825640321009966341 ## 8 8 https://www.airbnb.com/rooms/820977218643665725 ## 9 9 https://www.airbnb.com/rooms/1136518508115343403 ## 10 10 https://www.airbnb.com/rooms/906427794641339249 ## 11 11 https://www.airbnb.com/rooms/910220951523307628 ## 12 12 https://www.airbnb.com/rooms/562066526358628124 ## 13 13 https://www.airbnb.com/rooms/836905206106125800 ## 14 14 https://www.airbnb.com/rooms/37280161 ## 15 15 https://www.airbnb.com/rooms/1117383770709754386 ## 16 16 https://www.airbnb.com/rooms/876547458561269566 ## 17 17 https://www.airbnb.com/rooms/14178113 ## 18 18 https://www.airbnb.com/rooms/50725885 ## 19 19 https://www.airbnb.com/rooms/993418205864569663 ## 20 20 https://www.airbnb.com/rooms/1086201037836456245 ## 21 21 https://www.airbnb.com/rooms/1080636109317462333 ## 22 22 https://www.airbnb.com/rooms/52260621 ## 23 23 https://www.airbnb.com/rooms/32385591 ## 24 24 https://www.airbnb.com/rooms/1019002964842986556 ## 25 25 https://www.airbnb.com/rooms/1040594193718430302 ## 26 26 https://www.airbnb.com/rooms/1157232129292028155 ## 27 27 https://www.airbnb.com/rooms/1128213219808671586 ## 28 28 https://www.airbnb.com/rooms/47187114 ## 29 29 https://www.airbnb.com/rooms/960196658116059828 ## 30 30 https://www.airbnb.com/rooms/1144110518582467483 ## 31 31 https://www.airbnb.com/rooms/1131295220446831983 ## 32 32 https://www.airbnb.com/rooms/823373718355347804 ## 33 33 https://www.airbnb.com/rooms/1075390521062087708 ## 34 34 https://www.airbnb.com/rooms/51247673 ## 35 35 https://www.airbnb.com/rooms/1142795653470025552 ## 36 36 https://www.airbnb.com/rooms/38095244 ## 37 37 https://www.airbnb.com/rooms/46730613 ## 38 38 https://www.airbnb.com/rooms/36200285 ## 39 39 https://www.airbnb.com/rooms/53738319 ## 40 40 https://www.airbnb.com/rooms/42147050 ## 41 41 https://www.airbnb.com/rooms/1157130584891972951 ## 42 42 https://www.airbnb.com/rooms/29093538 ## 43 43 https://www.airbnb.com/rooms/1082000964201371514 ## 44 44 https://www.airbnb.com/rooms/1149115749856809033 ## 45 45 https://www.airbnb.com/rooms/1147355536033186655 ## 46 46 https://www.airbnb.com/rooms/759519129222594937 ## 47 47 https://www.airbnb.com/rooms/920832993049213084 ## 48 48 https://www.airbnb.com/rooms/774509660121154145 ## 49 49 https://www.airbnb.com/rooms/773412768071142366 ## 50 50 https://www.airbnb.com/rooms/1081961409265708663 ## 51 51 https://www.airbnb.com/rooms/963984686180475787 ## 52 52 https://www.airbnb.com/rooms/931761848303773522 ## 53 53 https://www.airbnb.com/rooms/774870953336947053 ## 54 54 https://www.airbnb.com/rooms/939201684938714435 ## 55 55 https://www.airbnb.com/rooms/51878874 ## 56 56 https://www.airbnb.com/rooms/774510320681288518 ## 57 57 https://www.airbnb.com/rooms/1040831166740270070 ## 58 58 https://www.airbnb.com/rooms/788118103399347581 ## 59 59 https://www.airbnb.com/rooms/49583836 ## 60 60 https://www.airbnb.com/rooms/46279172 ## 61 61 https://www.airbnb.com/rooms/26298268 ## 62 62 https://www.airbnb.com/rooms/48089692 ## 63 63 https://www.airbnb.com/rooms/48090269 ## 64 64 https://www.airbnb.com/rooms/47596529 ## 65 65 https://www.airbnb.com/rooms/623165293751387327 ## 66 66 https://www.airbnb.com/rooms/49364323 ## 67 67 https://www.airbnb.com/rooms/49560632 ## 68 68 https://www.airbnb.com/rooms/7402294 ## 69 69 https://www.airbnb.com/rooms/822366864542195747 ## 70 70 https://www.airbnb.com/rooms/1084159694238840147 ## 71 71 https://www.airbnb.com/rooms/45933954 ## 72 72 https://www.airbnb.com/rooms/38566020 ## 73 73 https://www.airbnb.com/rooms/53963150 ## 74 74 https://www.airbnb.com/rooms/2286215 ## 75 75 https://www.airbnb.com/rooms/17364894 ## 76 76 https://www.airbnb.com/rooms/831838093592568957 ## 77 77 https://www.airbnb.com/rooms/736108838473686339 ## 78 78 https://www.airbnb.com/rooms/774721173889499781 ## 79 79 https://www.airbnb.com/rooms/1071946349935202195 ## 80 80 https://www.airbnb.com/rooms/1107131277455874085 ## 81 81 https://www.airbnb.com/rooms/35027258 ## 82 82 https://www.airbnb.com/rooms/1076848810499431922 ## 83 83 https://www.airbnb.com/rooms/9631029 ## 84 84 https://www.airbnb.com/rooms/1011091074931378184 ## 85 85 https://www.airbnb.com/rooms/32166098 ## 86 86 https://www.airbnb.com/rooms/1098580611208270478 ## 87 87 https://www.airbnb.com/rooms/1097902572545234214 ## 88 88 https://www.airbnb.com/rooms/48005113 ## 89 89 https://www.airbnb.com/rooms/50360185 ## 90 90 https://www.airbnb.com/rooms/1085334794707904867 ## 91 91 https://www.airbnb.com/rooms/742602572496183895 ## 92 92 https://www.airbnb.com/rooms/561379340683951008 ## 93 93 https://www.airbnb.com/rooms/579090181069213103 ## 94 94 https://www.airbnb.com/rooms/2562982 ## 95 95 https://www.airbnb.com/rooms/20379551 ## 96 96 https://www.airbnb.com/rooms/803807922942624193 ## 97 97 https://www.airbnb.com/rooms/1068894176302982404 ## 98 98 https://www.airbnb.com/rooms/1044197617562612186 ## 99 99 https://www.airbnb.com/rooms/2375659 ## 100 100 https://www.airbnb.com/rooms/811523164163197128 ## address location.lat location.lng X.y ## 1 Belo Horizonte, Minas Gerais, Brazil -19.99636 -44.04467 1 ## 2 Belo Horizonte, Minas Gerais, Brazil -19.98734 -44.03149 2 ## 3 Belo Horizonte, Minas Gerais, Brazil -19.99400 -44.01400 3 ## 4 Belo Horizonte, Minas Gerais, Brazil -19.89753 -44.01633 4 ## 5 Nova Lima, Minas Gerais, Brazil -20.05900 -43.98900 5 ## 6 Nova Lima, Minas Gerais, Brazil -20.05540 -43.98328 6 ## 7 Belo Horizonte, Minas Gerais, Brazil -20.00058 -43.97209 7 ## 8 Belo Horizonte, Minas Gerais, Brazil -20.00064 -43.97230 8 ## 9 Belo Horizonte, Minas Gerais, Brazil -20.01300 -44.01200 9 ## 10 Belo Horizonte, Minas Gerais, Brazil -19.99800 -44.02000 10 ## 11 Belo Horizonte, Minas Gerais, Brazil -19.99899 -44.02107 11 ## 12 Belo Horizonte, Minas Gerais, Brazil -20.01025 -44.02337 12 ## 13 Belo Horizonte, Minas Gerais, Brazil -20.00059 -43.97313 13 ## 14 Solar do Barreiro, Minas Gerais, Brazil -20.01371 -44.01575 14 ## 15 Belo Horizonte, Minas Gerais, Brazil -19.87799 -44.01335 15 ## 16 Belo Horizonte, Minas Gerais, Brazil -19.85700 -44.01000 16 ## 17 Belo Horizonte, Minas Gerais, Brazil -19.83376 -44.01463 17 ## 18 Santa Terezinha, Minas Gerais, Brazil -19.86097 -44.00921 18 ## 19 Belo Horizonte, Minas Gerais, Brazil -19.99848 -43.99425 19 ## 20 Belo Horizonte, Minas Gerais, Brazil -19.92656 -44.00118 20 ## 21 Belo Horizonte, Minas Gerais, Brazil -19.92800 -44.00200 21 ## 22 João Pinheiro, Minas Gerais, Brazil -19.93200 -44.00000 22 ## 23 Belo Horizonte, Pampulha, Brazil -19.85000 -44.00400 23 ## 24 Belo Horizonte, Minas Gerais, Brazil -19.87800 -44.00100 24 ## 25 Belo Horizonte, Minas Gerais, Brazil -19.87800 -44.00100 25 ## 26 Belo Horizonte, Minas Gerais, Brazil -19.88797 -44.00249 26 ## 27 Belo Horizonte, Minas Gerais, Brazil -19.88800 -44.00200 27 ## 28 Trevo, Minas Gerais, Brazil -19.83517 -44.00431 28 ## 29 Belo Horizonte, Minas Gerais, Brazil -19.88357 -43.99397 29 ## 30 Belo Horizonte, Minas Gerais, Brazil -19.87600 -43.99400 30 ## 31 Belo Horizonte, Minas Gerais, Brazil -19.88536 -43.99364 31 ## 32 Belo Horizonte, Minas Gerais, Brazil -19.91833 -43.98967 32 ## 33 Belo Horizonte, Minas Gerais, Brazil -19.92600 -43.98900 33 ## 34 Dom Cabral, Minas Gerais, Brazil -19.92311 -43.99135 34 ## 35 Belo Horizonte, Minas Gerais, Brazil -19.92500 -43.99100 35 ## 36 Coração Eucarístico, Minas Gerais, Brazil -19.92589 -43.99229 36 ## 37 Vila Paquetá, Minas Gerais, Brazil -19.86984 -43.99352 37 ## 38 Bandeirantes (Pampulha), Minas Gerais, Brazil -19.86675 -43.99402 38 ## 39 Vila Paquetá, Minas Gerais, Brazil -19.86970 -43.99391 39 ## 40 Coração Eucarístico, Minas Gerais, Brazil -19.92440 -43.98944 40 ## 41 Belo Horizonte, Minas Gerais, Brazil -19.83217 -43.99441 41 ## 42 Belo Horizonte, Minas Gerais, Brazil -19.86676 -43.99327 42 ## 43 Belo Horizonte, Minas Gerais, Brazil -19.85072 -43.98856 43 ## 44 Belo Horizonte, Minas Gerais, Brazil -19.84400 -43.98500 44 ## 45 Belo Horizonte, Minas Gerais, Brazil -19.84200 -43.98400 45 ## 46 Belo Horizonte, Minas Gerais, Brazil -19.84083 -43.98412 46 ## 47 Belo Horizonte, Minas Gerais, Brazil -19.84100 -43.98466 47 ## 48 Belo Horizonte, Minas Gerais, Brazil -19.84685 -43.98255 48 ## 49 Belo Horizonte, Minas Gerais, Brazil -19.84098 -43.98953 49 ## 50 Belo Horizonte, Minas Gerais, Brazil -19.85068 -43.98691 50 ## 51 Belo Horizonte, Minas Gerais, Brazil -19.84230 -43.98198 51 ## 52 Belo Horizonte, Minas Gerais, Brazil -19.84081 -43.98430 52 ## 53 Belo Horizonte, Minas Gerais, Brazil -19.84000 -43.99100 53 ## 54 Belo Horizonte, Minas Gerais, Brazil -19.84274 -43.98308 54 ## 55 Jardim Atlântico, Minas Gerais, Brazil -19.84274 -43.98266 55 ## 56 Belo Horizonte, Minas Gerais, Brazil -19.84002 -43.99167 56 ## 57 Belo Horizonte, Minas Gerais, Brazil -19.84263 -43.98633 57 ## 58 Belo Horizonte, Minas Gerais, Brazil -19.84888 -43.98282 58 ## 59 Cidade Jardim, Minas Gerais, Brazil -19.93772 -43.95189 59 ## 60 Santo Agostinho, Minas Gerais, Brazil -19.92911 -43.94836 60 ## 61 Belo Horizonte, Minas Gerais, Brazil -19.93098 -43.92354 61 ## 62 Santo Agostinho, Minas Gerais, Brazil -19.93041 -43.94780 62 ## 63 Santo Agostinho, Minas Gerais, Brazil -19.92872 -43.94822 63 ## 64 Vila Ipe Amarelo, Minas Gerais, Brazil -19.81042 -44.14176 64 ## 65 Mangabeiras, Minas Gerais, Brazil -19.95362 -43.91255 65 ## 66 Ipiranga, Minas Gerais, Brazil -19.88559 -43.93828 66 ## 67 Santa Efigênia, Minas Gerais, Brazil -19.92479 -43.91383 67 ## 68 Belo Horizonte, Minas Gerais, Brazil -19.93166 -43.95212 68 ## 69 Cidade de Brumadinho, Minas Gerais, Brazil -20.08274 -44.03417 69 ## 70 Belo Horizonte, Minas Gerais, Brazil -19.84803 -43.97366 70 ## 71 Sion, Minas Gerais, Brazil -19.95319 -43.93788 71 ## 72 Sagrada Família, Minas Gerais, Brazil -19.89617 -43.92448 72 ## 73 Solar do Madeira, Minas Gerais, Brazil -19.89277 -44.14223 73 ## 74 Belo Horizonte, Minas Gerais, Brazil -19.97456 -43.97152 74 ## 75 Belo Horizonte, Minas Gerais, Brazil -19.91600 -43.94100 75 ## 76 Belo Horizonte, Minas Gerais, Brazil -19.92353 -43.95468 76 ## 77 Belo Horizonte, Minas Gerais, Brazil -19.85400 -43.99100 77 ## 78 Contagem, Minas Gerais, Brazil -19.89009 -44.11263 78 ## 79 Belo Horizonte, Minas Gerais, Brazil -19.93074 -43.93637 79 ## 80 Belo Horizonte, Minas Gerais, Brazil -19.84800 -43.97800 80 ## 81 Contagem, Minas Gerais, Brazil -19.91023 -44.14621 81 ## 82 Belo Horizonte, Minas Gerais, Brazil -19.87300 -43.90200 82 ## 83 Belo Horizonte, Minas Gerais, Brazil -19.93252 -43.93430 83 ## 84 Nova Lima, Minas Gerais, Brazil -20.06137 -43.91572 84 ## 85 Serra, Minas Gerais, Brazil -19.93727 -43.91891 85 ## 86 Nova Lima, Minas Gerais, Brazil -20.06300 -43.92900 86 ## 87 Nova Lima, Minas Gerais, Brazil -20.10200 -43.92800 87 ## 88 Honório Bicalho, Minas Gerais, Brazil -20.03407 -43.82358 88 ## 89 Esmeraldas, Minas Gerais, Brazil -19.71359 -44.14285 89 ## 90 Belo Horizonte, Minas Gerais, Brazil -19.89145 -43.92351 90 ## 91 Contagem, Minas Gerais, Brazil -19.96900 -44.02600 91 ## 92 Betim, Minas Gerais, Brazil -20.01433 -44.18778 92 ## 93 Eldorado, Minas Gerais, Brazil -19.93619 -44.03512 93 ## 94 Contagem, Minas Gerais, Brazil -19.87637 -44.02936 94 ## 95 Serra, Minas Gerais, Brazil -19.93741 -43.92012 95 ## 96 São José da Lapa, Minas Gerais, Brazil -19.71014 -43.97917 96 ## 97 Rio Acima, Minas Gerais, Brazil -20.05391 -43.79670 97 ## 98 Santa Luzia, Minas Gerais, Brazil -19.68260 -43.79577 98 ## 99 Belo Horizonte, Minas Gerais, Brazil -19.86502 -43.99078 99 ## 100 São José da Lapa, Minas Gerais, Brazil -19.70987 -43.97924 100 ## roomType ## 1 Entire rental unit ## 2 Private room in home ## 3 Entire home ## 4 Entire rental unit ## 5 Entire home ## 6 Entire home ## 7 Tiny home ## 8 Entire home ## 9 Entire rental unit ## 10 Private room in rental unit ## 11 Entire rental unit ## 12 Private room in home ## 13 Tiny home ## 14 Entire rental unit ## 15 Private room in guesthouse ## 16 Private room in home ## 17 Entire rental unit ## 18 Private room in bed and breakfast ## 19 Entire rental unit ## 20 Private room in home ## 21 Private room in home ## 22 Entire rental unit ## 23 Entire home ## 24 Private room in home ## 25 Private room in home ## 26 Entire rental unit ## 27 Entire rental unit ## 28 Entire home ## 29 Entire rental unit ## 30 Entire rental unit ## 31 Entire rental unit ## 32 Entire rental unit ## 33 Entire rental unit ## 34 Entire rental unit ## 35 Private room in bed and breakfast ## 36 Private room in home ## 37 Private room in loft ## 38 Private room in home ## 39 Entire serviced apartment ## 40 Entire rental unit ## 41 Entire home ## 42 Private room in home ## 43 Entire guesthouse ## 44 Private room in rental unit ## 45 Entire rental unit ## 46 Entire home ## 47 Private room in home ## 48 Private room in rental unit ## 49 Private room in condo ## 50 Entire guesthouse ## 51 Entire home ## 52 Entire home ## 53 Private room in condo ## 54 Private room in rental unit ## 55 Private room in rental unit ## 56 Private room in rental unit ## 57 Entire home ## 58 Entire rental unit ## 59 Entire home ## 60 Entire rental unit ## 61 Entire rental unit ## 62 Entire rental unit ## 63 Entire rental unit ## 64 Entire home ## 65 Entire villa ## 66 Entire home ## 67 Entire rental unit ## 68 Private room in rental unit ## 69 Entire home ## 70 Entire home ## 71 Entire rental unit ## 72 Private room in rental unit ## 73 Entire cottage ## 74 Entire home ## 75 Entire loft ## 76 Entire rental unit ## 77 Entire home ## 78 Entire home ## 79 Entire rental unit ## 80 Entire home ## 81 Entire home ## 82 Entire home ## 83 Entire rental unit ## 84 Entire home ## 85 Private room in home ## 86 Entire home ## 87 Entire home ## 88 Entire cottage ## 89 Entire cottage ## 90 Entire rental unit ## 91 Entire home ## 92 Entire cottage ## 93 Private room in rental unit ## 94 Entire home ## 95 Entire place ## 96 Entire home ## 97 Entire guesthouse ## 98 Entire home ## 99 Entire home ## 100 Entire home Another joining operation is the “inner join” in which only observations that are common to both data frames are included. 5.1.1.3 Merge 5.1.2 Cruzamento de dados Entenda chave como uma coluna que está presente da mesma forma em dois conjuntos de dados distintos. O conceito completo de chave é bem mais complexo que isto, mas, para começarmos a entender e usar os joins, basta usar essa intuição. Tendo esse conceito simplificado de chave em mente, a primeira coisa que se deve fazer quando for preciso cruzar dois conjuntos de dados é tentar identificar quais os campos chaves, ou seja, quais campos estão presentes nos dois grupos. O que acontece quando nem todos os códigos de um grupo estão no outro? E quando um grupo tem códigos repetidos em várias linhas? Para responder a essas e outras perguntas precisamos conhecer os diferentes tipos de joins. Existe pelo menos uma dezena de tipos de joins, mas 90% das vezes você precisará apenas dos tipos básicos que explicaremos a seguir. Usaremos o pacote dplyr para aplicar os joins. O R base possui a função merge() para joins, Inner Join (ou apenas Join) Trata-se do join mais simples, mais básico e mais usado dentre todos os outros tipos. O seu comportamento mantém no resultado apenas as linhas presentes nos dois conjuntos de dados que estão sendo cruzados. O inner join funciona da seguinte forma: 5.2 Remover dados duplicados Às vezes temos informações duplicadas em nossos bancos de dados e precisamos guardar apenas aqueles que apresentam valores únicos. "],["aula-5.html", "Chapter 6 Aula 5 6.1 Visualização de variáveis", " Chapter 6 Aula 5 6.1 Visualização de variáveis 6.1.1 Pacote ggplot2 O pacote ggplot2 é um poderoso pacote de visualização de variáveis. Esse pacote é estruturado de forma que a “gramática” seja utilizada para um gráfico a partir de múltiplas camadas. As camadas serão formadas por dados, mapeamentos estéticos, transformações estatísticas dos dados, objetos geométricos (pontos, linhas, barras etc.) e ajuste de posicionamento. Além disso, existem outros componentes, como os sistemas de coordenadas (cartesiano, polar, mapa etc.) e, se for o caso, divisões do gráfico em subplots (facet). Um simples exemplo de múltiplas camadas seria um gráfico de pontos adicionado de uma curva de ajustamento. library(ggplot2) ## Need help? Try Stackoverflow: https://stackoverflow.com/tags/ggplot2 dados&lt;-read.csv(&quot;/Users/eugeniaviana/Documents/Documents/Eugenia/Sociologia/MQ/aula1.csv&quot;) 6.1.1.1 Diagrama de barras simples Vamos criar um simples diagrama de barras. ggplot(dados, aes(x=estado_civil))+geom_bar() O comando fill=“cor” pode ser utilizado para escolher a cor do diagrama. Vamos escolher a cor azul claro (lightblue), que já vem como um das cores padrões do R. ggplot(dados, aes(x=estado_civil))+geom_bar(fill=&quot;lightblue&quot;) Além disso podemos escolher uma cor personalizada, através do código hex. ggplot(dados, aes(x=estado_civil))+geom_bar(fill=&quot;#5EB8B4&quot;) 6.1.1.2 Adicionando títulos ggplot(dados, aes(x=estado_civil))+geom_bar(fill=&quot;#5EB8B4&quot;)+ xlab(&quot;Estado Civil&quot;)+ ylab(&quot;&quot;) 6.1.1.3 Diagrama de barras empilhado ggplot(dados, aes(x=as.factor(moradia), fill = as.factor(trabalho))) + geom_bar(position=&quot;fill&quot;)+ scale_fill_brewer(palette=&quot;BrBG&quot;, direction=-1)+ xlab(&quot;Average Minimum Wage&quot;)+ ylab(&quot;&quot;)+ guides(fill = guide_legend(title = &quot;Accessibility quartile&quot;)) "],["glossário.html", "Chapter 7 Glossário", " Chapter 7 Glossário Go to ifelse Subset Table "],["pacotes.html", "Chapter 8 Pacotes 8.1 dplyr 8.2 ggplot", " Chapter 8 Pacotes 8.1 dplyr O forte do pacote dplyr é a sintaxe simples e concisa, o que facilita o aprendizado e torna o pacote um dos preferidos para as tarefas do dia a dia. Também conta como ponto forte sua otimização de performance para manipulação de dados. Ao carregar o pacote tidyverse, você já carregará automaticamente o pacote dplyr, mas você também pode carregá-lo individualmente: O dplyr cobre praticamente todas as tarefas básicas da manipulação de dados: agregar, sumarizar, filtrar, ordenar, criar variáveis, joins, dentre outras. As funções do dplyr reproduzem as principais tarefas da manipulação, de forma bastante intuitiva: select() filter() arrange() mutate() group_by() summarise() rename() Além de nomes de funções intuitivos, o dplyr também faz uso de um recurso disponível em boa parte dos pacotes do Hadley, o operador %&gt;% (originário do pacote magrittr). Este operador encadeia as chamadas de funções de forma que você não vai precisar ficar chamando uma função dentro da outra ou ficar fazendo atribuições usando diversas linhas para concluir suas manipulações. Aliás, podemos dizer que esse operador %&gt;%, literalmente, cria um fluxo sequencial bastante claro e legível para todas as atividades de manipulação. 8.2 ggplot "],["cheatsheets.html", "Chapter 9 Cheatsheets", " Chapter 9 Cheatsheets "],["referências.html", "Chapter 10 Referências", " Chapter 10 Referências Sites: https://rpubs.com/khoalemaiu/873148 https://bookdown.org/ejvanholm/WorkingWithData/ https://www.lampada.uerj.br/arquivosdb/_book2/referencias.html http://sillasgonzaga.com/material/cdr/ "],["avaliação.html", "Chapter 11 Avaliação", " Chapter 11 Avaliação bookdown::render_book(“index.Rmd”,) bookdown::publish_book(render = “local”) "],["hello-bookdown.html", "Chapter 12 Hello bookdown 12.1 A section", " Chapter 12 Hello bookdown All chapters start with a first-level heading followed by your chapter title, like the line above. There should be only one first-level heading (#) per .Rmd file. 12.1 A section All chapter sections start with a second-level (##) or higher heading followed by your section title, like the sections above and below here. You can have as many as you want within a chapter. An unnumbered section Chapters and sections are numbered by default. To un-number a heading, add a {.unnumbered} or the shorter {-} at the end of the heading, like in this section. "],["cross.html", "Chapter 13 Cross-references 13.1 Chapters and sub-chapters 13.2 Captioned figures and tables", " Chapter 13 Cross-references Cross-references make it easier for your readers to find and link to elements in your book. 13.1 Chapters and sub-chapters There are two steps to cross-reference any heading: Label the heading: # Hello world {#nice-label}. Leave the label off if you like the automated heading generated based on your heading title: for example, # Hello world = # Hello world {#hello-world}. To label an un-numbered heading, use: # Hello world {-#nice-label} or {# Hello world .unnumbered}. Next, reference the labeled heading anywhere in the text using \\@ref(nice-label); for example, please see Chapter 13. If you prefer text as the link instead of a numbered reference use: any text you want can go here. 13.2 Captioned figures and tables Figures and tables with captions can also be cross-referenced from elsewhere in your book using \\@ref(fig:chunk-label) and \\@ref(tab:chunk-label), respectively. See Figure 13.1. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 13.1: Here is a nice figure! Don’t miss Table 13.1. knitr::kable( head(pressure, 10), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 13.1: Here is a nice table! temperature pressure 0 0.0002 20 0.0012 40 0.0060 60 0.0300 80 0.0900 100 0.2700 120 0.7500 140 1.8500 160 4.2000 180 8.8000 "],["parts.html", "Chapter 14 Parts", " Chapter 14 Parts You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "Chapter 15 Footnotes and citations 15.1 Footnotes 15.2 Citations", " Chapter 15 Footnotes and citations 15.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one 1. 15.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package [@R-bookdown] (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr [@xie2015] (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations This is a footnote.↩︎ "],["blocks.html", "Chapter 16 Blocks 16.1 Equations 16.2 Theorems and proofs 16.3 Callout blocks", " Chapter 16 Blocks 16.1 Equations Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{16.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (16.1). 16.2 Theorems and proofs Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 16.1. Theorem 16.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 16.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["sharing-your-book.html", "Chapter 17 Sharing your book 17.1 Publishing 17.2 404 pages 17.3 Metadata for sharing", " Chapter 17 Sharing your book 17.1 Publishing HTML books can be published online, see: https://bookdown.org/yihui/bookdown/publishing.html 17.2 404 pages By default, users will be directed to a 404 page if they try to access a webpage that cannot be found. If you’d like to customize your 404 page instead of using the default, you may add either a _404.Rmd or _404.md file to your project root and use code and/or Markdown syntax. 17.3 Metadata for sharing Bookdown HTML books will provide HTML metadata for social sharing on platforms like Twitter, Facebook, and LinkedIn, using information you provide in the index.Rmd YAML. To setup, set the url for your book and the path to your cover-image file. Your book’s title and description are also used. This gitbook uses the same social sharing data across all chapters in your book- all links shared will look the same. Specify your book’s source repository on GitHub using the edit key under the configuration options in the _output.yml file, which allows users to suggest an edit by linking to a chapter’s source file. Read more about the features of this output format here: https://pkgs.rstudio.com/bookdown/reference/gitbook.html Or use: ?bookdown::gitbook "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
